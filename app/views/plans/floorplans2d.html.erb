<div class="main-container">
  <div class="row main-row">
    <div class="accordion accordion-container accordion-flush col-3">
      <div class="accordion-item">
        <h2 class="accordion-header">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTopLayer" aria-expanded="false" aria-controls="flush-collapseTopLayer">
            Top Layer
          </button>
        </h2>
        <div id="flush-collapseTopLayer" class="accordion-collapse collapse items">
          <div class="draggable" draggable="true" id="item-T1">T1</div>
          <div class="draggable" draggable="true" id="item-T2">T2</div>
          <div class="draggable" draggable="true" id="item-T3">T3</div>
        </div>
      </div>
      <div class="accordion-item">
        <h2 class="accordion-header">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseFurniture" aria-expanded="false" aria-controls="flush-collapseFurniture">
            Furniture Layer
          </button>
        </h2>
        <div id="flush-collapseFurniture" class="accordion-collapse collapse items">
          <div class="draggable" draggable="true" id="item-F1">
            <div class="draggable-chair"></div>
          </div>
          <div class="draggable" draggable="true" id="item-F2">
            <div class="draggable-chair-red"></div>
          </div>
          <div class="draggable" draggable="true" id="item-F3">
            <div class="draggable-chair-blue"></div>
          </div>
        </div>
      </div>
      <div class="accordion-item">
        <h2 class="accordion-header">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseElectric" aria-expanded="false" aria-controls="flush-collapseElectric">
            Electric Layer
          </button>
        </h2>
        <div id="flush-collapseElectric" class="accordion-collapse collapse items">
          <div class="draggable" draggable="true" id="item-E1">
            <div class="draggable-camera"></div>
          </div>
        </div>
      </div>
      <div class="accordion-item">
        <h2 class="accordion-header">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseStaff" aria-expanded="false" aria-controls="flush-collapseStaff">
            Staff Layer
          </button>
        </h2>
        <div id="flush-collapseStaff" class="accordion-collapse collapse items">
          <div class="draggable" draggable="true" id="item-S1">
            <div class="draggable-man"></div>
          </div>
          <div class="draggable" draggable="true" id="item-S2">
            <div class="draggable-woman"></div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-6 dropzone-container">
      <div id="dropzone"></div>
      <input type="range" min="1" max="100" value="50" class="slider" id="myRange" style="width: 80%" >
    </div>
    <div class="accordion-container col-3"></div>
  </div>

  <div class="container">
    <div> 
      <table class="table" style="margin-top: 3em">   
        <thead class="thead-light">
          <th style="vertical-align: middle;">Name</th>
          <th style="vertical-align: middle;">Item Type</th>
          <th style="vertical-align: middle;">Start Time</th>
          <th style="vertical-align: middle;">End Time</th>
        </thead>
        <tbody id="items-table-body">
          <!-- Table rows will be added dynamically -->

        </tbody>
      </table>
    <div>

    <div class="button-container d-flex" style="margin-top: 3em">
      <%= link_to "Back", plans_path, class: "btn btn-secondary" %>
      <%= link_to "Save", "", class: "btn btn-primary me-auto", style:"background-color:#478ac9; margin-left: 1em;" %>
      <%= link_to "Preview in 3D", "", class: "btn btn-primary", style:"background-color:#478ac9" %>
    </div>
  </div>

  <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editModalLabel"></h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="row g-3 align-items-center">
            <div class="col-auto">
              <label for="itemWidth" class="col-form-label">Width</label>
            </div>
            <div class="col-auto">
              <input type="number" id="itemWidth" class="form-control">
            </div>
          </div>
          <div class="row g-3 align-items-center" style="margin-top:1em">
            <div class="col-auto">
              <label for="itemHeight" class="col-form-label">Height</label>
            </div>
            <div class="col-auto">
              <input type="number" id="itemHeight" class="form-control">
            </div>
          </div>
          <div class="row g-3 align-items-center" style="margin-top:1em">
            <div class="col-auto">
              <label for="itemRotation" class="col-form-label">Rotation</label>
            </div>
            <div class="col-auto">
              <input type="number" id="itemRotation" class="form-control">
            </div>
          </div>
          <div class="row g-3 align-items-center" style="margin-top:1em">
            <div class="col-auto">
              <label for="itemDescription" class="col-form-label">Description</label>
            </div>
            <div class="col-auto">
              <input id="itemDescription" class="form-control">
            </div>
          </div>


        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-danger me-auto" id="confirmDeleteBtn" data-bs-dismiss="modal">Delete</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" id="confirmUpdateBtn" data-bs-dismiss="modal">Update</button>
        </div>
      </div>
  </div>
</div>
</div>

<style>
  .main-container {
    margin-bottom: 3em;
  }
  .main-row {
    height: 80vh;
  }
  .accordion-container {
    overflow-y: auto;
    height: 100%;
  }
  .accordion-collapse {
    padding: 1em;
    width: 100% !important;
  }

  .dropzone-container {
    background: lightblue;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
  }
  #dropzone {
    background: white;
    width: 80%;
    height: 80%;
    position: relative;
  }
  .items {
    display: flex;
    flex-wrap: wrap;
    width: 200px;
    border: 1px solid #000;
  }

</style>

<script>
  (function() {
    $(document).ready(function() {
      // get plan's venue width and height
      const planWidth = <%= @plan.venue_width %>;
      const planLength = <%= @plan.venue_length %>; 
            
      // change dropzone width and height
      const dropzone = document.getElementById('dropzone');
      const boundingBox = dropzone.getBoundingClientRect();
      const dropzoneWidth = boundingBox.width;
      const dropzoneHeight = boundingBox.height;

      var ratio_width = dropzoneWidth / planWidth;
      var ratio_length = dropzoneHeight / planLength;
      var ratio = Math.min(ratio_width, ratio_length);
      dropzone.style.width = `${planWidth * ratio}px`;
      dropzone.style.height = `${planLength * ratio}px`;      
    });

    const draggables = document.querySelectorAll('.draggable');
    let offsetX, offsetY;

    function handleDragStart(e) {
      e.dataTransfer.setData('text/plain', this.id);
      const rect = this.getBoundingClientRect();
      offsetX = e.clientX - rect.left;
      offsetY = e.clientY - rect.top;
    }

    function handleDrop(e) {
      e.preventDefault();
      const droppedElementId = e.dataTransfer.getData('text/plain');
      const element = document.getElementById(droppedElementId);

      const boundingBox = dropzone.getBoundingClientRect();
      const x = e.clientX - boundingBox.left - offsetX;
      const y = e.clientY - boundingBox.top - offsetY;

      if (!element.getAttribute('data-cloned')) {
        const clonedElement = element.cloneNode(true);

        clonedElement.style.position = 'absolute';
        clonedElement.style.left = `${x}px`;
        clonedElement.style.top = `${y}px`;

        const newID = `item-${Math.floor(Math.random() * 10000)}`;
        clonedElement.id = newID;
        clonedElement.setAttribute('data-cloned', 'true');  

        dropzone.appendChild(clonedElement);
        makeDraggable(clonedElement);
      } else {
        element.style.position = 'absolute';
        element.style.left = `${x}px`;
        element.style.top = `${y}px`;
        makeDraggable(element);
      }
    }

    function makeDraggable(element) {
      element.draggable = true;
      element.addEventListener('dragstart', handleDragStart);
      element.addEventListener('contextmenu', handleRightClick);
    }

    function handleRightClick(e) {
      e.preventDefault();
      const clickedElement = e.currentTarget;

      // Show the delete confirmation modal
      const editModal = new bootstrap.Modal(document.getElementById('editModal'));
      editModal.show();

      document.getElementById('editModalLabel').innerText = `Details: ${clickedElement.id}`;
      document.getElementById('itemWidth').value = clickedElement.offsetWidth;
      document.getElementById('itemHeight').value = clickedElement.offsetHeight;

      // Attach a one-time event listener to the "Delete" button in the modal
      document.getElementById('confirmDeleteBtn').onclick = function() {
        dropzone.removeChild(clickedElement);
        editModal.hide();
      };
    }

    draggables.forEach(makeDraggable);

    const dropzone = document.getElementById('dropzone');
    dropzone.addEventListener('dragover', e => e.preventDefault());
    dropzone.addEventListener('drop', handleDrop);
  })();
</script>